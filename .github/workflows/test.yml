name: test

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  TEST_ARGS: -coverprofile coverage.out -covermode atomic

  # c.f. https://github.com/golangci/golangci-lint/blob/main/CHANGELOG.md
  GOLANGCI_LINT_VERSION: v2.0

  WORKLOAD_IDENTITY_PROVIDER: "projects/515669014143/locations/global/workloadIdentityPools/gh-gcp-kmsenv/providers/github-actions"
  SERVICE_ACCOUNT_EMAIL: "gcp-kmsenv@kmsenv.iam.gserviceaccount.com"

permissions:
  contents: read
  id-token: write

jobs:
  test:
    name: test

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        golang:
          - "1.23"
          - "1.24"

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.golang }}
        id: go

      - name: Run test
        run: |
          set -xe
          make test
          make testrace

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Run integration test
        run: make test
        env:
          KMS_KEYRING_KEY_NAME: ${{ secrets.KMS_KEYRING_KEY_NAME }}
          KMS_INTEGRATION_TEST_KEY: ${{ secrets.KMS_INTEGRATION_TEST_KEY }}
          INTEGRATION_TEST_WANT: "integration_test_value"
        continue-on-error: true # NOTE: secrets cannot be obtained with forked repository PR

      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.out
          format: golang
        continue-on-error: true # NOTE: secrets cannot be obtained with forked repository PR

      - name: Slack Notification (not success)
        uses: act10ns/slack@v2
        if: "! success()"
        continue-on-error: true
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          matrix: ${{ toJson(matrix) }}

  lint:
    name: lint

    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
        id: go

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

      - name: Slack Notification (not success)
        uses: act10ns/slack@v2
        if: "! success()"
        continue-on-error: true
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}

  notify:
    needs:
      - test
      - lint

    runs-on: ubuntu-latest

    steps:
      - name: Slack Notification (success)
        uses: act10ns/slack@v2
        if: always()
        continue-on-error: true
        with:
          status: ${{ job.status }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
